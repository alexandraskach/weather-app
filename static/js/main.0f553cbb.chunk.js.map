{"version":3,"sources":["components/ShowWeather.component.jsx","components/SearchCity.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["ShowWeather","props","data","main","className","Math","round","temp","SearchCity","api","useState","query","setQuery","weather","setWeather","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLA2BeA,MAzBf,SAAqBC,GACnB,IAAQC,EAASD,EAATC,KAER,OACE,8BACuB,oBAAbA,EAAKC,KACX,8BACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBC,KAAKC,MAAMJ,EAAKC,KAAKI,MAA5C,WACA,qBAAKH,UAAU,SAAf,SACuB,oBAAbF,EAAKC,KACTD,EAAKC,KAAKI,KAAO,GACf,gBACA,gBACF,WAKV,MC6BOC,MA/Cf,WACE,IAAMC,EACC,mCADDA,EAEE,2CAGR,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAaA,OACE,qBACEV,UACyB,oBAAhBS,EAAQV,MACXU,EAAQV,KAAKI,KAAO,GAClB,WAEF,MANR,SASE,0BAASH,UAAU,UAAnB,UACE,qBAAKA,UAAU,SAAf,SACE,uBACEW,KAAK,OACLX,UAAU,aACVY,YAAY,aACZC,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOC,QACnCA,MAAOT,EACPU,WA7BK,SAACC,GACE,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAIf,EAAJ,qBAAyBE,EAAzB,+BAAqDF,IACvDgB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLd,EAAWc,GACXhB,EAAS,IACTiB,QAAQC,IAAIF,WAyBd,cAAC,EAAD,CAAa1B,KAAMW,UCrCZkB,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0f553cbb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ShowWeather(props) {\r\n  const { data } = props;\r\n\r\n  return (\r\n    <div>\r\n      {typeof data.main != \"undefined\" ? (\r\n        <div>\r\n          <div className=\"weather-box\">\r\n            <div className=\"temp\">{Math.round(data.main.temp)}Â°c</div>\r\n            <div className=\"result\">\r\n              {typeof data.main != \"undefined\"\r\n                ? data.main.temp > 15\r\n                  ? \"Il fait chaud\"\r\n                  : \"Il fait froid\"\r\n                : \" \"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowWeather;\r\n","import React, { useState } from \"react\";\r\nimport ShowWeather from \"./ShowWeather.component\";\r\n\r\nfunction SearchCity() {\r\n  const api = {\r\n    key: \"98b7465353d383f3d0f3bc4a284a48ae\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = (evt) => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          setQuery(\"\");\r\n          console.log(result);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={\r\n        typeof weather.main != \"undefined\"\r\n          ? weather.main.temp > 15\r\n            ? \"app warm\"\r\n            : \"app\"\r\n          : \"app\"\r\n      }\r\n    >\r\n      <section className=\"content\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Rechercher\"\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n          />\r\n        </div>\r\n        <ShowWeather data={weather}></ShowWeather>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchCity;\r\n","import React from \"react\";\nimport SearchCity from \"./components/SearchCity.component\";\n\nfunction App() {\n  return <SearchCity></SearchCity>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}